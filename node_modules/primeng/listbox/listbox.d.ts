import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
import * as ɵngcc3 from 'primeng/ripple';
export declare const LISTBOX_VALUE_ACCESSOR: any;
export declare class Listbox implements AfterContentInit, ControlValueAccessor {
    el: ElementRef;
    cd: ChangeDetectorRef;
    multiple: boolean;
    style: any;
    styleClass: string;
    listStyle: any;
    listStyleClass: string;
    readonly: boolean;
    disabled: boolean;
    checkbox: boolean;
    filter: boolean;
    filterMatchMode: string;
    filterLocale: string;
    metaKeySelection: boolean;
    dataKey: string;
    showToggleAll: boolean;
    optionLabel: string;
    optionValue: string;
    optionDisabled: string;
    ariaFilterLabel: string;
    filterPlaceHolder: string;
    onChange: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onDblClick: EventEmitter<any>;
    headerCheckboxViewChild: ElementRef;
    headerFacet: any;
    footerFacet: any;
    templates: QueryList<any>;
    _options: any[];
    itemTemplate: TemplateRef<any>;
    headerTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    _filterValue: string;
    _filteredOptions: any[];
    filtered: boolean;
    value: any;
    onModelChange: Function;
    onModelTouched: Function;
    optionTouched: boolean;
    focus: boolean;
    headerCheckboxFocus: boolean;
    constructor(el: ElementRef, cd: ChangeDetectorRef);
    get options(): any[];
    set options(val: any[]);
    get filterValue(): string;
    set filterValue(val: string);
    ngAfterContentInit(): void;
    getOptionLabel(option: any): any;
    getOptionValue(option: any): any;
    isOptionDisabled(option: any): any;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    onOptionClick(event: Event, option: any): void;
    onOptionTouchEnd(option: any): void;
    onOptionDoubleClick(event: Event, option: any): any;
    onOptionClickSingle(event: any, option: any): void;
    onOptionClickMultiple(event: any, option: any): void;
    onOptionClickCheckbox(event: any, option: any): void;
    removeOption(option: any): void;
    isSelected(option: any): boolean;
    get allChecked(): boolean;
    get optionsToRender(): any[];
    hasFilter(): boolean;
    onFilter(event: KeyboardEvent): void;
    filterOptions(): void;
    get toggleAllDisabled(): boolean;
    toggleAll(event: any): void;
    checkAll(): void;
    uncheckAll(): void;
    onOptionKeyDown(event: KeyboardEvent, option: any): void;
    findNextItem(item: any): any;
    findPrevItem(item: any): any;
    onHeaderCheckboxFocus(): void;
    onHeaderCheckboxBlur(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Listbox>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Listbox, "p-listbox", never, { "checkbox": "checkbox"; "filter": "filter"; "filterMatchMode": "filterMatchMode"; "metaKeySelection": "metaKeySelection"; "showToggleAll": "showToggleAll"; "options": "options"; "filterValue": "filterValue"; "disabled": "disabled"; "multiple": "multiple"; "style": "style"; "styleClass": "styleClass"; "listStyle": "listStyle"; "listStyleClass": "listStyleClass"; "readonly": "readonly"; "filterLocale": "filterLocale"; "dataKey": "dataKey"; "optionLabel": "optionLabel"; "optionValue": "optionValue"; "optionDisabled": "optionDisabled"; "ariaFilterLabel": "ariaFilterLabel"; "filterPlaceHolder": "filterPlaceHolder"; }, { "onChange": "onChange"; "onClick": "onClick"; "onDblClick": "onDblClick"; }, ["headerFacet", "footerFacet", "templates"]>;
}
export declare class ListboxModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ListboxModule, [typeof Listbox], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule, typeof ɵngcc3.RippleModule], [typeof Listbox, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ListboxModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGJveC5kLnRzIiwic291cmNlcyI6WyJsaXN0Ym94LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBBZnRlckNvbnRlbnRJbml0LCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBMSVNUQk9YX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBMaXN0Ym94IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGNkOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBtdWx0aXBsZTogYm9vbGVhbjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBsaXN0U3R5bGU6IGFueTtcbiAgICBsaXN0U3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHJlYWRvbmx5OiBib29sZWFuO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIGNoZWNrYm94OiBib29sZWFuO1xuICAgIGZpbHRlcjogYm9vbGVhbjtcbiAgICBmaWx0ZXJNYXRjaE1vZGU6IHN0cmluZztcbiAgICBmaWx0ZXJMb2NhbGU6IHN0cmluZztcbiAgICBtZXRhS2V5U2VsZWN0aW9uOiBib29sZWFuO1xuICAgIGRhdGFLZXk6IHN0cmluZztcbiAgICBzaG93VG9nZ2xlQWxsOiBib29sZWFuO1xuICAgIG9wdGlvbkxhYmVsOiBzdHJpbmc7XG4gICAgb3B0aW9uVmFsdWU6IHN0cmluZztcbiAgICBvcHRpb25EaXNhYmxlZDogc3RyaW5nO1xuICAgIGFyaWFGaWx0ZXJMYWJlbDogc3RyaW5nO1xuICAgIGZpbHRlclBsYWNlSG9sZGVyOiBzdHJpbmc7XG4gICAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uRGJsQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGhlYWRlckNoZWNrYm94Vmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGhlYWRlckZhY2V0OiBhbnk7XG4gICAgZm9vdGVyRmFjZXQ6IGFueTtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIF9vcHRpb25zOiBhbnlbXTtcbiAgICBpdGVtVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgaGVhZGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZm9vdGVyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgX2ZpbHRlclZhbHVlOiBzdHJpbmc7XG4gICAgX2ZpbHRlcmVkT3B0aW9uczogYW55W107XG4gICAgZmlsdGVyZWQ6IGJvb2xlYW47XG4gICAgdmFsdWU6IGFueTtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgb3B0aW9uVG91Y2hlZDogYm9vbGVhbjtcbiAgICBmb2N1czogYm9vbGVhbjtcbiAgICBoZWFkZXJDaGVja2JveEZvY3VzOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGdldCBvcHRpb25zKCk6IGFueVtdO1xuICAgIHNldCBvcHRpb25zKHZhbDogYW55W10pO1xuICAgIGdldCBmaWx0ZXJWYWx1ZSgpOiBzdHJpbmc7XG4gICAgc2V0IGZpbHRlclZhbHVlKHZhbDogc3RyaW5nKTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBnZXRPcHRpb25MYWJlbChvcHRpb246IGFueSk6IGFueTtcbiAgICBnZXRPcHRpb25WYWx1ZShvcHRpb246IGFueSk6IGFueTtcbiAgICBpc09wdGlvbkRpc2FibGVkKG9wdGlvbjogYW55KTogYW55O1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZSh2YWw6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uT3B0aW9uQ2xpY2soZXZlbnQ6IEV2ZW50LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25Ub3VjaEVuZChvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25Eb3VibGVDbGljayhldmVudDogRXZlbnQsIG9wdGlvbjogYW55KTogYW55O1xuICAgIG9uT3B0aW9uQ2xpY2tTaW5nbGUoZXZlbnQ6IGFueSwgb3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIG9uT3B0aW9uQ2xpY2tNdWx0aXBsZShldmVudDogYW55LCBvcHRpb246IGFueSk6IHZvaWQ7XG4gICAgb25PcHRpb25DbGlja0NoZWNrYm94KGV2ZW50OiBhbnksIG9wdGlvbjogYW55KTogdm9pZDtcbiAgICByZW1vdmVPcHRpb24ob3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIGlzU2VsZWN0ZWQob3B0aW9uOiBhbnkpOiBib29sZWFuO1xuICAgIGdldCBhbGxDaGVja2VkKCk6IGJvb2xlYW47XG4gICAgZ2V0IG9wdGlvbnNUb1JlbmRlcigpOiBhbnlbXTtcbiAgICBoYXNGaWx0ZXIoKTogYm9vbGVhbjtcbiAgICBvbkZpbHRlcihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgZmlsdGVyT3B0aW9ucygpOiB2b2lkO1xuICAgIGdldCB0b2dnbGVBbGxEaXNhYmxlZCgpOiBib29sZWFuO1xuICAgIHRvZ2dsZUFsbChldmVudDogYW55KTogdm9pZDtcbiAgICBjaGVja0FsbCgpOiB2b2lkO1xuICAgIHVuY2hlY2tBbGwoKTogdm9pZDtcbiAgICBvbk9wdGlvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQsIG9wdGlvbjogYW55KTogdm9pZDtcbiAgICBmaW5kTmV4dEl0ZW0oaXRlbTogYW55KTogYW55O1xuICAgIGZpbmRQcmV2SXRlbShpdGVtOiBhbnkpOiBhbnk7XG4gICAgb25IZWFkZXJDaGVja2JveEZvY3VzKCk6IHZvaWQ7XG4gICAgb25IZWFkZXJDaGVja2JveEJsdXIoKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIExpc3Rib3hNb2R1bGUge1xufVxuIl19